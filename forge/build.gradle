plugins {
    id "com.github.johnrengelman.shadow"
}

loom {
    forge {
        mixinConfig "verdure.mixins.json"
    }
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don"t use the `shadow` configuration from the plugin itself as it"s meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = "Kotlin for Forge"
        url = "https://thedarkcolour.github.io/KotlinForForge/"
    }
}

dependencies {
    forge "net.minecraftforge:forge:$rootProject.forge_version"

    // Architectury API. This is optional, and you can comment it out if you don"t need it.
    modImplementation("dev.architectury:architectury-forge:$rootProject.architectury_api_version")
    implementation("thedarkcolour:kotlinforforge:$kotlin_for_forge_version")

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowBundle project(path: ":common", configuration: "transformProductionForge")
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = "dev-shadow"
}

remapJar {
    inputFile.set shadowJar.archiveFile
}
